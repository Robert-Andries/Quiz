name: Build and Analyze

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      # Sonar scanner cache
      - name: Cache SonarQube scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner

      - name: Install Sonar scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Begin Sonar analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"robisca_Azure-AZ900-Quiz" /o:"robisca" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Restore
        run: dotnet restore --locked-mode

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test with coverage
        run: dotnet test --configuration Release --collect:"XPlat Code Coverage"

      - name: End Sonar analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Publish coverage to GitHub summary
        uses: irongut/CodeCoverageSummary@v1.4.0
        with:
          filename: '**/coverage.cobertura.xml'
          badge: true
          fail_below_min: true

      - name: Snyk scan
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --file=Quiz/QuizSolution.sln

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: ./bin/Release/net*/publish